Index: /Users/asurin/src/edk2/Clover/rEFIt_UEFI/Platform/kernel_patcher.c
===================================================================
--- /Users/asurin/src/edk2/Clover/rEFIt_UEFI/Platform/kernel_patcher.c	(revision 4278)
+++ /Users/asurin/src/edk2/Clover/rEFIt_UEFI/Platform/kernel_patcher.c	(working copy)
@@ -740,6 +740,40 @@
   return TRUE;
 }
 
+  BOOLEAN KernelHaswellEPatch(VOID *kernelData)
+  {
+    // Credit to stinga11 for the patches used below
+    // Based on Pike R. Alpha's Haswell patch for Mavericks
+
+    UINT8   *Bytes;
+    UINT32  Index;
+    BOOLEAN PatchApplied;
+
+    DBG("Searching for Haswell-E patch pattern\n");
+
+    Bytes = (UINT8*)kernelData;
+    PatchApplied = FALSE;
+
+    for (Index = 0; Index < 0x1000000; ++Index) {
+      if (Bytes[Index] == 0x74 && Bytes[Index + 1] == 0x11 && Bytes[Index + 2] == 0x83 && Bytes[Index + 3] == 0xF8 && Bytes[Index + 4] == 0x3C) {
+        Bytes[Index + 4] = 0x3F;
+        DBG("Found Haswell-E pattern; patched.\n");
+        if (PatchApplied) {
+          break;
+        }
+
+        PatchApplied = TRUE;
+      }
+    }
+
+    if (!PatchApplied) {
+      DBG("Can't find Haswell-E patch pattern, kernel patch aborted.\n");
+    }
+
+    return PatchApplied;
+  }
+
+
 //
 // syscl - EnableExtCpuXCPM(): enable extra(unsupport) Cpu XCPM function
 // PowerManagement that will be enabled on:
@@ -776,140 +810,7 @@
 // syscl - Enable Haswell-E XCPM
 // Hex data provided and polished (c) PMheart, idea (c) Pike R.Alpha
 //
-BOOLEAN HaswellEXCPM(VOID *kernelData, LOADER_ENTRY *Entry, BOOLEAN use_xcpm_idle)
-{
-    DBG("HaswellEXCPM() ===>\n");
-    UINT8       *kern = (UINT8*)kernelData;
-    CHAR8       *comment;
-    UINT32      i;
-    UINT32      patchLocation;
-    UINT64      os_version = AsciiOSVersionToUint64(Entry->OSVersion);
   
-    // check OS version suit for patches
-    if (os_version < AsciiOSVersionToUint64("10.8.5") || os_version >= AsciiOSVersionToUint64("10.14")) {
-        DBG("Unsupported macOS.\nHaswell-E requires macOS 10.8.5 - 10.13.x, aborted\n");
-        DBG("HaswellEXCPM() <===FALSE\n");
-        return FALSE;
-    }
-    
-    // _cpuid_set_info
-    comment = "_cpuid_set_info";
-    if (os_version <= AsciiOSVersionToUint64("10.8.5")) {
-        // 10.8.5
-        UINT8 find[] = { 0x83, 0xF8, 0x3C, 0x74, 0x2D };
-        UINT8 repl[] = { 0x83, 0xF8, 0x3F, 0x74, 0x2D };
-        applyKernPatch(kern, find, sizeof(find), repl, comment);
-    } else if (os_version < AsciiOSVersionToUint64("10.10")) {
-        // 10.9.x
-        UINT8 find[] = { 0x83, 0xF8, 0x3C, 0x75, 0x07 };
-        UINT8 repl[] = { 0x83, 0xF8, 0x3F, 0x75, 0x07 };
-        applyKernPatch(kern, find, sizeof(find), repl, comment);
-    } else if (os_version <= AsciiOSVersionToUint64("10.10.1")) {
-        // 10.10 - 10.10.1
-        UINT8 find[] = { 0x74, 0x11, 0x83, 0xF8, 0x3C };
-        UINT8 repl[] = { 0x74, 0x11, 0x83, 0xF8, 0x3F };
-        applyKernPatch(kern, find, sizeof(find), repl, comment);
-    } // 10.10.2+: native support reached, no need to patch
-    
-    // _xcpm_bootstrap
-    comment = "_xcpm_bootstrap";
-    if (os_version <= AsciiOSVersionToUint64("10.8.5")) {
-        // 10.8.5
-        UINT8 find[] = { 0x83, 0xFB, 0x3C, 0x75, 0x54 };
-        UINT8 repl[] = { 0x83, 0xFB, 0x3F, 0x75, 0x54 };
-        applyKernPatch(kern, find, sizeof(find), repl, comment);
-    } else if (os_version < AsciiOSVersionToUint64("10.10")) {
-        // 10.9.x
-        UINT8 find[] = { 0x83, 0xFB, 0x3C, 0x75, 0x68 };
-        UINT8 repl[] = { 0x83, 0xFB, 0x3F, 0x75, 0x68 };
-        applyKernPatch(kern, find, sizeof(find), repl, comment);
-    } else if (os_version <= AsciiOSVersionToUint64("10.10.2")) {
-        // 10.10 - 10.10.2
-        UINT8 find[] = { 0x83, 0xFB, 0x3C, 0x75, 0x63 };
-        UINT8 repl[] = { 0x83, 0xFB, 0x3F, 0x75, 0x63 };
-        applyKernPatch(kern, find, sizeof(find), repl, comment);
-    } else if (os_version <= AsciiOSVersionToUint64("10.10.5")) {
-        // 10.10.3 - 10.10.5
-        UINT8 find[] = { 0x83, 0xC3, 0xC6, 0x83, 0xFB, 0x0D };
-        UINT8 repl[] = { 0x83, 0xC3, 0xC3, 0x83, 0xFB, 0x0D };
-        applyKernPatch(kern, find, sizeof(find), repl, comment);
-    } else if (os_version <= AsciiOSVersionToUint64("10.11")) {
-        // 10.11 DB/PB - 10.11.0
-        UINT8 find[] = { 0x83, 0xC3, 0xC6, 0x83, 0xFB, 0x0D };
-        UINT8 repl[] = { 0x83, 0xC3, 0xC3, 0x83, 0xFB, 0x0D };
-        applyKernPatch(kern, find, sizeof(find), repl, comment);
-    } else if (os_version <= AsciiOSVersionToUint64("10.11.6")) {
-        // 10.11.1 - 10.11.6
-        UINT8 find[] = { 0x83, 0xC3, 0xBB, 0x83, 0xFB, 0x09 };
-        UINT8 repl[] = { 0x83, 0xC3, 0xB8, 0x83, 0xFB, 0x09 };
-        applyKernPatch(kern, find, sizeof(find), repl, comment);
-    } else if (os_version <= AsciiOSVersionToUint64("10.12.5")) {
-        // 10.12 - 10.12.5
-        UINT8 find[] = { 0x83, 0xC3, 0xC4, 0x83, 0xFB, 0x22 };
-        UINT8 repl[] = { 0x83, 0xC3, 0xC1, 0x83, 0xFB, 0x22 };
-        applyKernPatch(kern, find, sizeof(find), repl, comment);
-    } else if (os_version < AsciiOSVersionToUint64("10.13")) {
-        // 10.12.6 - 10.12.x
-        UINT8 find[] = { 0x8D, 0x43, 0xC4, 0x83, 0xF8, 0x22 };
-        UINT8 repl[] = { 0x8D, 0x43, 0xC1, 0x83, 0xF8, 0x22 };
-        applyKernPatch(kern, find, sizeof(find), repl, comment);
-    } else if (os_version < AsciiOSVersionToUint64("10.14")) {
-        // 10.13
-        UINT8 find[] = { 0x89, 0xD8, 0x04, 0xC4, 0x3C, 0x22 };
-        UINT8 repl[] = { 0x89, 0xD8, 0x04, 0xC1, 0x3C, 0x22 };
-        applyKernPatch(kern, find, sizeof(find), repl, comment);
-    }
-    
-    DBG("Searching _xcpm_pkg_scope_msr ...\n");
-    comment = "_xcpm_pkg_scope_msrs";
-    if (os_version <= AsciiOSVersionToUint64("10.8.5")) {
-        // 10.8.5
-        UINT8 find[] = {
-            0x48, 0x8D, 0x3D, 0x02, 0x71, 0x55, 0x00, 0xBE,
-            0x07, 0x00, 0x00, 0x00, 0xEB, 0x1F, 0x48, 0x8D,
-            0x3D, 0xF4, 0x70, 0x55, 0x00, 0xBE, 0x07, 0x00,
-            0x00, 0x00, 0x31, 0xD2, 0xE8, 0x28, 0x02, 0x00, 0x00
-        };
-        UINT8 repl[] = {
-            0x48, 0x8D, 0x3D, 0x02, 0x71, 0x55, 0x00, 0xBE,
-            0x07, 0x00, 0x00, 0x00, 0x90, 0x90, 0x48, 0x8D,
-            0x3D, 0xF4, 0x70, 0x55, 0x00, 0xBE, 0x07, 0x00,
-            0x00, 0x00, 0x31, 0xD2, 0x90, 0x90, 0x90, 0x90, 0x90
-        };
-        applyKernPatch(kern, find, sizeof(find), repl, comment);
-    } else if (os_version < AsciiOSVersionToUint64("10.10")) {
-        // 10.9.x
-        UINT8 find[] = { 0xBE, 0x07, 0x00, 0x00, 0x00, 0x74, 0x13, 0x31, 0xD2, 0xE8, 0x5F, 0x02, 0x00, 0x00 };
-        UINT8 repl[] = { 0xBE, 0x07, 0x00, 0x00, 0x00, 0x90, 0x90, 0x31, 0xD2, 0x90, 0x90, 0x90, 0x90, 0x90 };
-        applyKernPatch(kern, find, sizeof(find), repl, comment);
-    } else {
-        // 10.10+
-        patchLocation = 0; // clean out the value just in case
-        for (i = 0; i < 0x1000000; i++) {
-            if (kern[i+0] == 0xBE && kern[i+1] == 0x07 && kern[i+2] == 0x00 && kern[i+3] == 0x00 &&
-                kern[i+4] == 0x00 && kern[i+5] == 0x31 && kern[i+6] == 0xD2 && kern[i+7] == 0xE8) {
-                patchLocation = i+7;
-                DBG("Found _xcpm_pkg_scope_msr\n");
-                break;
-            }
-        }
-        
-        if (patchLocation) {
-            for (i = 0; i < 5; i++) {
-                kern[patchLocation+i] = 0x90;
-            }
-            DBG("Applied _xcpm_pkg_scope_msr patch\n");
-        } else {
-            DBG("_xcpm_pkg_scope_msr not found, patch aborted\n");
-            DBG("HaswellEXCPM() <===FALSE\n");
-            return FALSE;
-        }
-    }
-    
-    DBG("HaswellEXCPM() <===\n");
-    return TRUE;
-}
-
 //
 // Enable Broadwell-E/EP PowerManagement on 10.12+ by syscl
 //
@@ -958,6 +859,33 @@
     DBG("BroadwellEPM() <===\n");
     return TRUE;
 }
+
+BOOLEAN HaswellEPM(VOID *kernelData, LOADER_ENTRY *Entry, BOOLEAN use_xcpm_idle)
+  {
+      DBG("HaswellEPM() ===>\n");
+      UINT8       *kern = (UINT8*)kernelData;
+      UINT64      os_version = AsciiOSVersionToUint64(Entry->OSVersion);
+      UINTN       maxReplace = 0; // enable MaxReplaces
+
+      if (os_version < AsciiOSVersionToUint64("10.10")) {
+          DBG("Haswell-E requires macOS version at least 10.10, aborted\n");
+          DBG("HaswellEPM() <===FALSE\n");
+          return FALSE;
+      }
+
+     if (os_version <= AsciiOSVersionToUint64("10.10.1")) {
+           UINT8 find[] = { 0x74, 0x11, 0x83, 0xF8, 0x3C };
+           UINT8 repl[] = { 0x74, 0x11, 0x83, 0xF8, 0x3F };
+          if (SearchAndReplace(kern, KERNEL_MAX_SIZE, find, sizeof(find), repl, maxReplace)) {
+              DBG("Found 0x3C\n");
+              DBG("Applied 0x3C -> 0x3F patch\n");
+              }
+          }
+
+      DBG("HaswellEPM() <===\n");
+       return TRUE;
+}
+
 //
 // syscl - this patch provides XCPM support for Haswell low-end(HSWLowEnd) and platforms later than Haswell
 // implemented by syscl
@@ -1847,7 +1775,7 @@
 
           case CPU_MODEL_HASWELL_E:
             // Haswell-E
-            EnableExtCpuXCPM = HaswellEXCPM;
+            EnableExtCpuXCPM = HaswellEPM;
             break;
               
           case CPU_MODEL_BROADWELL_E5:
